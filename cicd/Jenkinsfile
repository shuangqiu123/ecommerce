pipeline {
    agent any

    environment {
        PATH = "$PATH:/usr/local/bin"
    }
    
    stages {
        stage('build and test project') {
            steps {
                script {
                    sh 'chmod 777 ./mvnw'
                    sh './mvnw install'
                }
            }
        }

        stage('build docker images') {
            steps {
                script {
                    sh 'docker-compose build'
                }
            }
        }

        stage('log in to AWS ECR') {
            steps {
                script {
                    sh 'aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin $AWS_ECR_CREDENTIALS'
                }
            }
        }

        stage('Push Docker image') {
             steps {
                script {
                    sh 'docker tag demostore_sq-item:LATEST $AWS_ECR_CREDENTIALS/demostore_sq-item:latest'
                    sh 'docker tag demostore_sq-user:LATEST $AWS_ECR_CREDENTIALS/demostore_sq-user:latest'
                    sh 'docker tag demostore_sq-order:LATEST $AWS_ECR_CREDENTIALS/demostore_sq-order:latest'
                    sh 'docker tag demostore_sq-eureka:LATEST $AWS_ECR_CREDENTIALS/demostore_sq-eureka:latest'
                    sh 'docker tag demostore_sq-management:LATEST $AWS_ECR_CREDENTIALS/demostore_sq-management:latest'
                    sh 'docker tag demostore_sq-payment:LATEST $AWS_ECR_CREDENTIALS/demostore_sq-payment:latest'
                    sh 'docker push $AWS_ECR_CREDENTIALS/demostore_sq-item:latest'
                    sh 'docker push $AWS_ECR_CREDENTIALS/demostore_sq-management:latest'
                    sh 'docker push $AWS_ECR_CREDENTIALS/demostore_sq-payment:latest'
                    sh 'docker push $AWS_ECR_CREDENTIALS/demostore_sq-order:latest'
                    sh 'docker push $AWS_ECR_CREDENTIALS/demostore_sq-user:latest'
                    sh 'docker push $AWS_ECR_CREDENTIALS/demostore_sq-eureka:latest'
                }
             }
        }
    }
}